<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userServiceImpl" class="com.warren.service.UserServiceImpl"/>
    <bean id="log" class="com.warren.log.Log"/>
    <bean id="afterLog" class="com.warren.log.AfterLog"/>


    <!--方式三：-->
    <bean id="annoPointCut" class="com.warren.diy.AnnotationPointCut"/>
    <!--开启注解支持-->
    <aop:aspectj-autoproxy/>

    <!--方式一：使用原生Spring API接口-->
    <!--配置aop：需要导入aop的约束-->
<!--
    <aop:config>
        &lt;!&ndash;切入点 expression：表达式， execution(要执行的位置！ * * * * *)&ndash;&gt;
        <aop:pointcut id="pointCut" expression="execution(* com.warren.service.UserServiceImpl.*(..))"/>
        &lt;!&ndash;执行环绕增加&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointCut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointCut"/>
    </aop:config>
-->

    <!--方式二：自定义类-->
<!--
    <bean id="diy" class="com.warren.diy.DiyPointCut"/>
    <aop:config>
        &lt;!&ndash;自定义切面，ref 要引用的类&ndash;&gt;
        <aop:aspect ref="diy" >
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="pointCut" expression="execution(* com.warren.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="pointCut"/>
            <aop:after method="after" pointcut-ref="pointCut"/>
        </aop:aspect>
    </aop:config>
-->

</beans>
