<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--无参构造创建-->
<!--
    <bean id="user" class="com.warren.pojo.User">
        <property name="name" value="Spring IOC 有东西的"></property>
    </bean>
-->

    <!--第一种：下标赋值-->
<!--
    <bean id="user" class="com.warren.pojo.User">
        <constructor-arg index="0" value="利用下标-有参构造"/>
    </bean>
-->

    <!--第二种：根据类型-->
<!--
    <bean id="user" class="com.warren.pojo.User">
        <constructor-arg type="java.lang.String" value="根据类型-有参构造"/>
    </bean>
-->
    <!--第三种：根据变量名-->
<!--    id 是bean的标识符,要唯一,如果没有配置id,name就是默认标识符
    如果配置id,又配置了name,那么name是别名
    name可以设置多个别名,可以用逗号,分号,空格隔开
    如果不配置id和name,可以根据applicationContext.getBean(.class)获取对象;-->
    <bean id="user" class="com.warren.pojo.User" name="user2 user3,u4;u5">
        <constructor-arg name="name" value="根据变量名-有参构造"/>
    </bean>


    <!--Beans当被加载的时候对象就已经创建了，无论你用不用。就类似于婚介网站，-->
    <bean id="userT" class="com.warren.pojo.UserT"/>

    <!--alias 设置别名 , 为bean设置别名 , 可以设置多个别名-->
<!--    <alias name="user" alias="user2"></alias>-->
<!--    <alias name="user" alias="user3"></alias>-->


</beans>